package functionality;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.Timer;

public class Panel extends JPanel implements ActionListener {
	Game game;
	static final int DELAY = 175;
	Timer timer1;

	public Panel(int height, int width) {
		game = new Game(height, width);
		timer1 = new Timer(DELAY, this);
		timer1.start();
	}

	Timer timer;

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		for (int i = 0; i < game.getBoard().getHeight(); i++)
			for (int j = 0; j < game.getBoard().getWidth(); j++)
				game.getBoard().getMatrix()[i][j].drawBloc(g);
	}

	@Override
	public void actionPerformed(ActionEvent e) {

		game.moveSnake(KeyDemo.currentDirection);
		repaint();
	}
}
